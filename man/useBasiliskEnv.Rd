% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/useBasiliskEnv.R
\name{useBasiliskEnv}
\alias{useBasiliskEnv}
\title{Use \pkg{basilisk} environments}
\usage{
useBasiliskEnv(envname, pkgname = NULL, dry = FALSE, required = TRUE)
}
\arguments{
\item{envname}{String containing the name of the environment to create.}

\item{pkgname}{String specifying the name of the R package that owns the environment.}

\item{dry}{Logical scalar indicating whether only the directory should be returned without loading the environment.}

\item{required}{Logical scalar indicating whether an error should be raised if the requested environment cannot be found.}
}
\value{
The function will load the specified \pkg{basilisk} environment into the R session.
It returns a string specifying the path to the environment.
If \code{dry=TRUE}, the character vector is returned without loading the environment.
}
\description{
Use \pkg{basilisk} environments for isolated execution of Python code with appropriate versions of all Python packages.
}
\details{
It is unlikely that developers should ever need to call \code{\link{useBasiliskEnv}} directly.
Rather, this interaction should be automatically handled by \code{\link{basiliskStart}}.

If \code{pkgname} is specified, \code{useBasiliskEnv} will search in the installation directory of \code{pkgname} for the specified \code{envname}
Otherwise, the function will treat \code{envname} as the path to the desired environment.

A side-effect of \code{useBasiliskEnv} with \code{dry=FALSE} is that the \code{"PYTHONPATH"} environment variable is unset for the duration of the R session
(or \pkg{basilisk} process, depending on the back-end chosen by \code{\link{basiliskStart}}).
This is a deliberate choice to avoid compromising the version guarantees if \code{\link{import}} is allowed to search other locations beyond the virtual environment.
}
\examples{
tmploc <- file.path(tempdir(), "my_package_B")
setupBasiliskEnv(tmploc, 'pandas')
useBasiliskEnv(tmploc) # TRUE or FALSE, depending on global Python.

tmploc2 <- file.path(tempdir(), "my_package_B_alt")
setupBasiliskEnv(tmploc2, 'pandas==0.24.1')
useBasiliskEnv(tmploc2) # FALSE, as global Python is already occupied.

}
\seealso{
\code{\link{basiliskStart}}, for how these virtual environments should be used.
}
\author{
Aaron Lun
}
