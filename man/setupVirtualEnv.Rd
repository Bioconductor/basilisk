% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/useVirtualEnv.R
\name{setupVirtualEnv}
\alias{setupVirtualEnv}
\alias{useVirtualEnv}
\title{Set up and use virtual environments}
\usage{
setupVirtualEnv(envname, packages, pkgpath = NULL,
  overwrite = is.null(pkgpath))

useVirtualEnv(envname, pkgname = NULL, dry = FALSE, required = TRUE)
}
\arguments{
\item{envname}{String containing the name of the virtual environment to create (for \code{setupVirtualEnv}) or use (other functions).}

\item{packages}{Character vector containing the names of Python packages to install into the virtual environment.
It is required to include version numbers in each string.}

\item{pkgpath}{String specifying the path to the R package installation directory, usually used in an R package installation script.
If \code{NULL}, it defaults to \code{\link{virtualenv_root}}.}

\item{overwrite}{Logical scalar indicating whether an existing virtual environment should be overwritten.
If \code{FALSE} and the virtual environment is already present, \code{setupVirtualEnv} is a no-op.}

\item{pkgname}{String specifying the package name, if the function is used inside an R package.}

\item{dry}{Logical scalar indicating whether only the directory should be returned without loading the virtual environment.}

\item{required}{Logical scalar indicating whether an error should be raised if the requested virtual environment cannot be found.}
}
\value{
\code{setupVirtualEnv} will create a virtual environment - at the designated location if \code{pkgpath} is specified, or at the default location for virtual environments otherwise.
It returns a character vector containing \code{packages}.

\code{useVirtualEnv} will load the specified virtual environment into the R session.
It returns a string specifying the path to the virtual environment.
If \code{dry=TRUE}, the character vector is returned without loading the virtual environment.
}
\description{
Set up and use Python virtual environments for isolated execution of Python code with appropriate versions of all Python packages.
}
\details{
Use of virtual environments is the recommended approach for Bioconductor packages to interact with the \pkg{basilisk} Python instance.
This avoids version conflicts within an R session when different Bioconductor packages (or even different functions within a single package) require incompatible versions of Python packages.

Developers of Bioconductor packages should call \code{setupVirtualEnv} with an appropriate \code{pkgpath} (usually generated by \code{system.file(package=PKGNAME)}) in an \code{.onLoad} function.
This will install the relevant Python packages during R package installation (and be skipped 
The \pkg{son.of.basilisk} example in the \code{inst} directory of \pkg{basilisk} can be used as an example.
}
\section{Dealing with versioning}{
 
Pinned version numbers must be present for all requested packages in \code{packages}.
This improved predictability makes debugging much easier when the R package is installed and executed on different systems.
Explicit versions are also mandatory for all dependencies of requested packages,
which is again necessary to ensure that the same versions are deployed across systems.

The only exception to the above rule is for \dQuote{core} packages that are installed into the \pkg{basilisk} Python instance.
If your requested packages depend on these core packages, \code{setupVirtualEnv} will automatically install them without requiring them to be listed with explicit version numbers in \code{packages}.
A full list of core packages with pinned versions is provided at \code{\link{listCorePackages}}.

The exception to the exception occurs when your requested packages are not compatible with the pinned versions of the core packages.
In such cases, the compatible versions of the core packages must again be explicitly listed in \code{packages}.
}

\section{Wrangling the PYTHONPATH}{

A side-effect of \code{useVirtualEnv} with \code{dry=FALSE} is that the \code{"PYTHONPATH"} environment variable is unset for the duration of the R session
(or \pkg{basilisk} process, depending on the back-end chosen by \code{\link{basiliskStart}}).
This is a deliberate choice to avoid compromising the version guarantees if \code{\link{import}} is allowed to search other locations beyond the virtual environment.
}

\examples{
setupVirtualEnv('my_package_A', c('pandas==0.25.1',
    "python-dateutil==2.8.1", "pytz==2019.3"))
useVirtualEnv("my_package_A")
X <- reticulate::import("pandas")
X$`__version__`
}
\seealso{
\code{\link{basiliskStart}}, for how these virtual environments should be used.

\code{\link{listCorePackages}}, for a list of core Python packages with pinned versions.
}
\author{
Aaron Lun
}
